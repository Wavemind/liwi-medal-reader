export const Config = {
  ALGORITHM_INFO: ['version_name', 'version_id', 'updated_at'],
  CATEGORIES: {
    assessment: 'assessment_test',
    chronicCondition: 'chronic_condition',
    basicMeasurement: 'basic_measurement',
    basicDemographic: 'basic_demographic',
    exposure: 'exposure',
    physicalExam: 'physical_exam',
    symptom: 'symptom',
    demographic: 'demographic',
    comorbidity: 'comorbidity',
    complaintCategory: 'complaint_category',
    predefinedSyndrome: 'predefined_syndrome',
    triage: 'triage',
    vaccine: 'vaccine',
    scored: 'scored',
    drug: 'drug',
    management: 'management',
    treatmentQuestion: 'treatment_question',
    backgroundCalculation: 'background_calculation',
    vitalSignAnthropometric: 'vital_sign_anthropometric',
    observedPhysicalSign: 'observed_physical_sign',
    consultationRelated: 'consultation_related',
    uniqueTriagePhysicalSign: 'unique_triage_physical_sign',
    uniqueTriageQuestion: 'unique_triage_question',
    referral: 'referral',
  },
  DEVICE_INFO: ['mac_address', 'name', 'model', 'brand'],
  DAYS_IN_MONTH: 30.4166667,
  DATABASE_INTERFACE: {
    local: 'local',
    remote: 'remote',
  },
  DISPLAY_FORMAT: {
    radioButton: 'RadioButton',
    input: 'Input',
    dropDownList: 'DropDownList',
    formula: 'Formula',
    reference: 'Reference', // table reference
    string: 'String',
    autocomplete: 'Autocomplete',
    date: 'Date',
  },
  ELEMENT_PER_PAGE: 5,
  ENVIRONMENTS: [
    { label: 'Test', value: 'test' },
    { label: 'Staging', value: 'staging' },
    { label: 'Production', value: 'production' },
  ],
  HEALTH_FACILITY_INFO: [
    'id',
    'architecture',
    'area',
    'country',
    'name',
    'main_data_ip',
    'local_data_ip',
  ],
  LANGUAGES: [
    { label: 'English', value: 'en' },
    { label: 'Swahili', value: 'sw' },
    { label: 'Hindi', value: 'hi' },
    { label: 'Fran√ßais', value: 'fr' },
  ],
  MEDICAL_CASE_STATUS: {
    inCreation: { label: 'in_creation' },
    triage: { label: 'triage' },
    consultation: { label: 'consultation' },
    tests: { label: 'tests' },
    finalDiagnosis: { label: 'final_diagnosis' },
    close: { label: 'close' },
  },
  NODE_TYPES: {
    diagnosis: 'Diagnosis',
    finalDiagnosis: 'FinalDiagnosis',
    healthCare: 'HealthCare',
    question: 'Question',
    questionsSequence: 'QuestionsSequence',
  },
  PING_INTERVAL: 5000,
  TIMEOUT: 3500,
  TIMEOUT_AXIOS: 3000,
  URL_PRODUCTION_API: 'https://medalc.unisante.ch/api/v1',
  URL_STAGING_API: 'https://liwi.wavelab.top/api/v1/',
  URL_TEST_API: 'https://liwi-test.wavelab.top/api/v1/',
  MOVIES_EXTENSION: ['mp4', 'mov', 'avi'],
  AUDIOS_EXTENSION: ['mp3', 'ogg'],
  PICTURES_EXTENSION: ['jpg', 'jpeg', 'gif', 'png', 'tiff'],
  VALUE_FORMATS: {
    array: 'Array',
    int: 'Integer',
    float: 'Float',
    bool: 'Boolean',
    string: 'String',
    date: 'Date',
    present: 'Present',
    positive: 'Positive',
  },
  REFERENCES: {
    z_score_male_table: require('../Assets/ReferenceTables/z_score_male_table.json'),
    z_score_female_table: require('../Assets/ReferenceTables/z_score_female_table.json'),
    muac_z_score_female_table: require('../Assets/ReferenceTables/muac_z_score_female.json'),
    muac_z_score_male_table: require('../Assets/ReferenceTables/muac_z_score_male.json'),
    bmi_for_age_female_table: require('../Assets/ReferenceTables/bmi_for_age_female.json'),
    bmi_for_age_male_table: require('../Assets/ReferenceTables/bmi_for_age_male.json'),
    weight_for_height_female_table: require('../Assets/ReferenceTables/weight_for_height_female.json'),
    weight_for_height_male_table: require('../Assets/ReferenceTables/weight_for_height_male.json'),
  },
  ADMINISTRATION_ROUTE_CATEGORIES: [
    'Enteral',
    'Parenteral injectable',
    'Mucocutaneous',
  ],
  MEDICATION_FORMS: {
    tablet: 'tablet',
    dispersible_tablet: 'dispersible_tablet',
    capsule: 'capsule',
    syrup: 'syrup',
    suspension: 'suspension',
    suppository: 'suppository',
    drops: 'drops',
    solution: 'solution',
    powder_for_injection: 'powder_for_injection',
    patch: 'patch',
    cream: 'cream',
    pessary: 'pessary',
    ointment: 'ointment',
    gel: 'gel',
    spray: 'spray',
    inhaler: 'inhaler',
  },
  STEP_ORDERS: {
    basicMeasurements: 'basic_measurements',
    complaintCategories: 'complaint_categories',
    firstLookAssessment: 'first_look_assessment',
    physicalExam: 'physical_exam',
    referral: 'referral_step',
    registration: 'registration_step',
  },
  AUTHO: {
    authEndpoint: '/oauth/authorize',
    tokenEndpoint: '/oauth/token',
  },
}
